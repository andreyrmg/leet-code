use crate::Solution;

impl Solution {
    pub fn find_words(mut board: Vec<Vec<char>>, words: Vec<String>) -> Vec<String> {
        let depth = words.iter().map(String::len).max().unwrap_or(0);

        #[derive(Default, Debug)]
        struct Node {
            children: [Option<Box<Node>>; 26],
        }

        let mut root: Box<Node> = Box::new(Default::default());

        for row in 0..board.len() {
            for col in 0..board[row].len() {
                find_words_from(row, col, &mut board, depth, &mut root)
            }
        }

        fn find_words_from(
            row: usize,
            col: usize,
            board: &mut Vec<Vec<char>>,
            depth: usize,
            node: &mut Node,
        ) {
            if depth == 0 {
                return;
            }
            let letter = board[row][col];

            let next = node.children[letter as usize - b'a' as usize]
                .get_or_insert_with(|| Default::default());

            board[row][col] = '.';
            if row > 0 && board[row - 1][col] != '.' {
                find_words_from(row - 1, col, board, depth - 1, next);
            }
            if row < board.len() - 1 && board[row + 1][col] != '.' {
                find_words_from(row + 1, col, board, depth - 1, next);
            }
            if col > 0 && board[row][col - 1] != '.' {
                find_words_from(row, col - 1, board, depth - 1, next);
            }
            if col < board[row].len() - 1 && board[row][col + 1] != '.' {
                find_words_from(row, col + 1, board, depth - 1, next);
            }
            board[row][col] = letter;
        }

        let find_word = |word: &String| {
            let mut chars = word.bytes();
            let mut current = Some(&root);
            while let Some(node) = current {
                current = match chars.next() {
                    Some(ch) => node.children[(ch - b'a') as usize].as_ref(),
                    None => return true,
                }
            }
            false
        };
        words.into_iter().filter(find_word).collect()
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn example() {
        assert_eq!(
            Solution::find_words(
                vec![
                    vec!['o', 'a', 'a', 'n'],
                    vec!['e', 't', 'a', 'e'],
                    vec!['i', 'h', 'k', 'r'],
                    vec!['i', 'f', 'l', 'v']
                ],
                vec!["oath".into(), "pea".into(), "eat".into(), "rain".into()]
            ),
            ["oath", "eat"]
        );
        assert_eq!(
            Solution::find_words(vec![vec!['a', 'b'], vec!['c', 'd']], vec!["abcd".into()]),
            Vec::<String>::new()
        );
    }
    #[test]
    fn test() {
        assert_eq!(
            Solution::find_words(
                vec![
                    vec!['m', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],
                    vec!['n', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['o', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['p', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['q', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['r', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['s', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['t', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['u', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['v', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['w', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'],
                    vec!['x', 'y', 'z', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
                ],
                vec![
                    "aaaaaaaaaa".into(),
                    "aaaaaaaaab".into(),
                    "aaaaaaaaac".into(),
                    "aaaaaaaaad".into(),
                    "aaaaaaaaae".into(),
                    "aaaaaaaaaf".into(),
                    "aaaaaaaaag".into(),
                    "aaaaaaaaah".into(),
                    "aaaaaaaaai".into(),
                    "aaaaaaaaaj".into(),
                    "aaaaaaaaak".into(),
                    "aaaaaaaaal".into(),
                    "aaaaaaaaam".into(),
                    "aaaaaaaaan".into(),
                    "aaaaaaaaao".into(),
                    "aaaaaaaaap".into(),
                    "aaaaaaaaaq".into(),
                    "aaaaaaaaar".into(),
                    "aaaaaaaaas".into(),
                    "aaaaaaaaat".into(),
                    "aaaaaaaaau".into(),
                    "aaaaaaaaav".into(),
                    "aaaaaaaaaw".into(),
                    "aaaaaaaaax".into(),
                    "aaaaaaaaay".into(),
                    "aaaaaaaaaz".into(),
                    "aaaaaaaaba".into(),
                    "aaaaaaaabb".into(),
                    "aaaaaaaabc".into(),
                    "aaaaaaaabd".into(),
                    "aaaaaaaabe".into(),
                    "aaaaaaaabf".into(),
                    "aaaaaaaabg".into(),
                    "aaaaaaaabh".into(),
                    "aaaaaaaabi".into(),
                    "aaaaaaaabj".into(),
                    "aaaaaaaabk".into(),
                    "aaaaaaaabl".into(),
                    "aaaaaaaabm".into(),
                    "aaaaaaaabn".into(),
                    "aaaaaaaabo".into(),
                    "aaaaaaaabp".into(),
                    "aaaaaaaabq".into(),
                    "aaaaaaaabr".into(),
                    "aaaaaaaabs".into(),
                    "aaaaaaaabt".into(),
                    "aaaaaaaabu".into(),
                    "aaaaaaaabv".into(),
                    "aaaaaaaabw".into(),
                    "aaaaaaaabx".into(),
                    "aaaaaaaaby".into(),
                    "aaaaaaaabz".into(),
                    "aaaaaaaaca".into(),
                    "aaaaaaaacb".into(),
                    "aaaaaaaacc".into(),
                    "aaaaaaaacd".into(),
                    "aaaaaaaace".into(),
                    "aaaaaaaacf".into(),
                    "aaaaaaaacg".into(),
                    "aaaaaaaach".into(),
                    "aaaaaaaaci".into(),
                    "aaaaaaaacj".into(),
                    "aaaaaaaack".into(),
                    "aaaaaaaacl".into(),
                    "aaaaaaaacm".into(),
                    "aaaaaaaacn".into(),
                    "aaaaaaaaco".into(),
                    "aaaaaaaacp".into(),
                    "aaaaaaaacq".into(),
                    "aaaaaaaacr".into(),
                    "aaaaaaaacs".into(),
                    "aaaaaaaact".into(),
                    "aaaaaaaacu".into(),
                    "aaaaaaaacv".into(),
                    "aaaaaaaacw".into(),
                    "aaaaaaaacx".into(),
                    "aaaaaaaacy".into(),
                    "aaaaaaaacz".into(),
                    "aaaaaaaada".into(),
                    "aaaaaaaadb".into(),
                    "aaaaaaaadc".into(),
                    "aaaaaaaadd".into(),
                    "aaaaaaaade".into(),
                    "aaaaaaaadf".into(),
                    "aaaaaaaadg".into(),
                    "aaaaaaaadh".into(),
                    "aaaaaaaadi".into(),
                    "aaaaaaaadj".into(),
                    "aaaaaaaadk".into(),
                    "aaaaaaaadl".into(),
                    "aaaaaaaadm".into(),
                    "aaaaaaaadn".into(),
                    "aaaaaaaado".into(),
                    "aaaaaaaadp".into(),
                    "aaaaaaaadq".into(),
                    "aaaaaaaadr".into(),
                    "aaaaaaaads".into(),
                    "aaaaaaaadt".into(),
                    "aaaaaaaadu".into(),
                    "aaaaaaaadv".into(),
                    "aaaaaaaadw".into(),
                    "aaaaaaaadx".into(),
                    "aaaaaaaady".into(),
                    "aaaaaaaadz".into(),
                    "aaaaaaaaea".into(),
                    "aaaaaaaaeb".into(),
                    "aaaaaaaaec".into(),
                    "aaaaaaaaed".into(),
                    "aaaaaaaaee".into(),
                    "aaaaaaaaef".into(),
                    "aaaaaaaaeg".into(),
                    "aaaaaaaaeh".into(),
                    "aaaaaaaaei".into(),
                    "aaaaaaaaej".into(),
                    "aaaaaaaaek".into(),
                    "aaaaaaaael".into(),
                    "aaaaaaaaem".into(),
                    "aaaaaaaaen".into(),
                    "aaaaaaaaeo".into(),
                    "aaaaaaaaep".into(),
                    "aaaaaaaaeq".into(),
                    "aaaaaaaaer".into(),
                    "aaaaaaaaes".into(),
                    "aaaaaaaaet".into(),
                    "aaaaaaaaeu".into(),
                    "aaaaaaaaev".into(),
                    "aaaaaaaaew".into(),
                    "aaaaaaaaex".into(),
                    "aaaaaaaaey".into(),
                    "aaaaaaaaez".into(),
                    "aaaaaaaafa".into(),
                    "aaaaaaaafb".into(),
                    "aaaaaaaafc".into(),
                    "aaaaaaaafd".into(),
                    "aaaaaaaafe".into(),
                    "aaaaaaaaff".into(),
                    "aaaaaaaafg".into(),
                    "aaaaaaaafh".into(),
                    "aaaaaaaafi".into(),
                    "aaaaaaaafj".into(),
                    "aaaaaaaafk".into(),
                    "aaaaaaaafl".into(),
                    "aaaaaaaafm".into(),
                    "aaaaaaaafn".into(),
                    "aaaaaaaafo".into(),
                    "aaaaaaaafp".into(),
                    "aaaaaaaafq".into(),
                    "aaaaaaaafr".into(),
                    "aaaaaaaafs".into(),
                    "aaaaaaaaft".into(),
                    "aaaaaaaafu".into(),
                    "aaaaaaaafv".into(),
                    "aaaaaaaafw".into(),
                    "aaaaaaaafx".into(),
                    "aaaaaaaafy".into(),
                    "aaaaaaaafz".into(),
                    "aaaaaaaaga".into(),
                    "aaaaaaaagb".into(),
                    "aaaaaaaagc".into(),
                    "aaaaaaaagd".into(),
                    "aaaaaaaage".into(),
                    "aaaaaaaagf".into(),
                    "aaaaaaaagg".into(),
                    "aaaaaaaagh".into(),
                    "aaaaaaaagi".into(),
                    "aaaaaaaagj".into(),
                    "aaaaaaaagk".into(),
                    "aaaaaaaagl".into(),
                    "aaaaaaaagm".into(),
                    "aaaaaaaagn".into(),
                    "aaaaaaaago".into(),
                    "aaaaaaaagp".into(),
                    "aaaaaaaagq".into(),
                    "aaaaaaaagr".into(),
                    "aaaaaaaags".into(),
                    "aaaaaaaagt".into(),
                    "aaaaaaaagu".into(),
                    "aaaaaaaagv".into(),
                    "aaaaaaaagw".into(),
                    "aaaaaaaagx".into(),
                    "aaaaaaaagy".into(),
                    "aaaaaaaagz".into(),
                    "aaaaaaaaha".into(),
                    "aaaaaaaahb".into(),
                    "aaaaaaaahc".into(),
                    "aaaaaaaahd".into(),
                    "aaaaaaaahe".into(),
                    "aaaaaaaahf".into(),
                    "aaaaaaaahg".into(),
                    "aaaaaaaahh".into(),
                    "aaaaaaaahi".into(),
                    "aaaaaaaahj".into(),
                    "aaaaaaaahk".into(),
                    "aaaaaaaahl".into(),
                    "aaaaaaaahm".into(),
                    "aaaaaaaahn".into(),
                    "aaaaaaaaho".into(),
                    "aaaaaaaahp".into(),
                    "aaaaaaaahq".into(),
                    "aaaaaaaahr".into(),
                    "aaaaaaaahs".into(),
                    "aaaaaaaaht".into(),
                    "aaaaaaaahu".into(),
                    "aaaaaaaahv".into(),
                    "aaaaaaaahw".into(),
                    "aaaaaaaahx".into(),
                    "aaaaaaaahy".into(),
                    "aaaaaaaahz".into(),
                    "aaaaaaaaia".into(),
                    "aaaaaaaaib".into(),
                    "aaaaaaaaic".into(),
                    "aaaaaaaaid".into(),
                    "aaaaaaaaie".into(),
                    "aaaaaaaaif".into(),
                    "aaaaaaaaig".into(),
                    "aaaaaaaaih".into(),
                    "aaaaaaaaii".into(),
                    "aaaaaaaaij".into(),
                    "aaaaaaaaik".into(),
                    "aaaaaaaail".into(),
                    "aaaaaaaaim".into(),
                    "aaaaaaaain".into(),
                    "aaaaaaaaio".into(),
                    "aaaaaaaaip".into(),
                    "aaaaaaaaiq".into(),
                    "aaaaaaaair".into(),
                    "aaaaaaaais".into(),
                    "aaaaaaaait".into(),
                    "aaaaaaaaiu".into(),
                    "aaaaaaaaiv".into(),
                    "aaaaaaaaiw".into(),
                    "aaaaaaaaix".into(),
                    "aaaaaaaaiy".into(),
                    "aaaaaaaaiz".into(),
                    "aaaaaaaaja".into(),
                    "aaaaaaaajb".into(),
                    "aaaaaaaajc".into(),
                    "aaaaaaaajd".into(),
                    "aaaaaaaaje".into(),
                    "aaaaaaaajf".into(),
                    "aaaaaaaajg".into(),
                    "aaaaaaaajh".into(),
                    "aaaaaaaaji".into(),
                    "aaaaaaaajj".into(),
                    "aaaaaaaajk".into(),
                    "aaaaaaaajl".into(),
                    "aaaaaaaajm".into(),
                    "aaaaaaaajn".into(),
                    "aaaaaaaajo".into(),
                    "aaaaaaaajp".into(),
                    "aaaaaaaajq".into(),
                    "aaaaaaaajr".into(),
                    "aaaaaaaajs".into(),
                    "aaaaaaaajt".into(),
                    "aaaaaaaaju".into(),
                    "aaaaaaaajv".into(),
                    "aaaaaaaajw".into(),
                    "aaaaaaaajx".into(),
                    "aaaaaaaajy".into(),
                    "aaaaaaaajz".into(),
                    "aaaaaaaaka".into(),
                    "aaaaaaaakb".into(),
                    "aaaaaaaakc".into(),
                    "aaaaaaaakd".into(),
                    "aaaaaaaake".into(),
                    "aaaaaaaakf".into(),
                    "aaaaaaaakg".into(),
                    "aaaaaaaakh".into(),
                    "aaaaaaaaki".into(),
                    "aaaaaaaakj".into(),
                    "aaaaaaaakk".into(),
                    "aaaaaaaakl".into(),
                    "aaaaaaaakm".into(),
                    "aaaaaaaakn".into(),
                    "aaaaaaaako".into(),
                    "aaaaaaaakp".into(),
                    "aaaaaaaakq".into(),
                    "aaaaaaaakr".into(),
                    "aaaaaaaaks".into(),
                    "aaaaaaaakt".into(),
                    "aaaaaaaaku".into(),
                    "aaaaaaaakv".into(),
                    "aaaaaaaakw".into(),
                    "aaaaaaaakx".into(),
                    "aaaaaaaaky".into(),
                    "aaaaaaaakz".into(),
                    "aaaaaaaala".into(),
                    "aaaaaaaalb".into(),
                    "aaaaaaaalc".into(),
                    "aaaaaaaald".into(),
                    "aaaaaaaale".into(),
                    "aaaaaaaalf".into(),
                    "aaaaaaaalg".into(),
                    "aaaaaaaalh".into(),
                    "aaaaaaaali".into(),
                    "aaaaaaaalj".into(),
                    "aaaaaaaalk".into(),
                    "aaaaaaaall".into(),
                    "aaaaaaaalm".into(),
                    "aaaaaaaaln".into(),
                    "aaaaaaaalo".into(),
                    "aaaaaaaalp".into(),
                    "aaaaaaaalq".into(),
                    "aaaaaaaalr".into(),
                    "aaaaaaaals".into(),
                    "aaaaaaaalt".into(),
                    "aaaaaaaalu".into(),
                    "aaaaaaaalv".into(),
                    "aaaaaaaalw".into(),
                    "aaaaaaaalx".into(),
                    "aaaaaaaaly".into(),
                    "aaaaaaaalz".into(),
                    "aaaaaaaama".into(),
                    "aaaaaaaamb".into(),
                    "aaaaaaaamc".into(),
                    "aaaaaaaamd".into(),
                    "aaaaaaaame".into(),
                    "aaaaaaaamf".into(),
                    "aaaaaaaamg".into(),
                    "aaaaaaaamh".into(),
                    "aaaaaaaami".into(),
                    "aaaaaaaamj".into(),
                    "aaaaaaaamk".into(),
                    "aaaaaaaaml".into(),
                    "aaaaaaaamm".into(),
                    "aaaaaaaamn".into(),
                    "aaaaaaaamo".into(),
                    "aaaaaaaamp".into(),
                    "aaaaaaaamq".into(),
                    "aaaaaaaamr".into(),
                    "aaaaaaaams".into(),
                    "aaaaaaaamt".into(),
                    "aaaaaaaamu".into(),
                    "aaaaaaaamv".into(),
                    "aaaaaaaamw".into(),
                    "aaaaaaaamx".into(),
                    "aaaaaaaamy".into(),
                    "aaaaaaaamz".into(),
                    "aaaaaaaana".into(),
                    "aaaaaaaanb".into(),
                    "aaaaaaaanc".into(),
                    "aaaaaaaand".into(),
                    "aaaaaaaane".into(),
                    "aaaaaaaanf".into(),
                    "aaaaaaaang".into(),
                    "aaaaaaaanh".into(),
                    "aaaaaaaani".into(),
                    "aaaaaaaanj".into(),
                    "aaaaaaaank".into(),
                    "aaaaaaaanl".into(),
                    "aaaaaaaanm".into(),
                    "aaaaaaaann".into(),
                    "aaaaaaaano".into(),
                    "aaaaaaaanp".into(),
                    "aaaaaaaanq".into(),
                    "aaaaaaaanr".into(),
                    "aaaaaaaans".into(),
                    "aaaaaaaant".into(),
                    "aaaaaaaanu".into(),
                    "aaaaaaaanv".into(),
                    "aaaaaaaanw".into(),
                    "aaaaaaaanx".into(),
                    "aaaaaaaany".into(),
                    "aaaaaaaanz".into(),
                    "aaaaaaaaoa".into(),
                    "aaaaaaaaob".into(),
                    "aaaaaaaaoc".into(),
                    "aaaaaaaaod".into(),
                    "aaaaaaaaoe".into(),
                    "aaaaaaaaof".into(),
                    "aaaaaaaaog".into(),
                    "aaaaaaaaoh".into(),
                    "aaaaaaaaoi".into(),
                    "aaaaaaaaoj".into(),
                    "aaaaaaaaok".into(),
                    "aaaaaaaaol".into(),
                    "aaaaaaaaom".into(),
                    "aaaaaaaaon".into(),
                    "aaaaaaaaoo".into(),
                    "aaaaaaaaop".into(),
                    "aaaaaaaaoq".into(),
                    "aaaaaaaaor".into(),
                    "aaaaaaaaos".into(),
                    "aaaaaaaaot".into(),
                    "aaaaaaaaou".into(),
                    "aaaaaaaaov".into(),
                    "aaaaaaaaow".into(),
                    "aaaaaaaaox".into(),
                    "aaaaaaaaoy".into(),
                    "aaaaaaaaoz".into(),
                    "aaaaaaaapa".into(),
                    "aaaaaaaapb".into(),
                    "aaaaaaaapc".into(),
                    "aaaaaaaapd".into(),
                    "aaaaaaaape".into(),
                    "aaaaaaaapf".into(),
                    "aaaaaaaapg".into(),
                    "aaaaaaaaph".into(),
                    "aaaaaaaapi".into(),
                    "aaaaaaaapj".into(),
                    "aaaaaaaapk".into(),
                    "aaaaaaaapl".into(),
                    "aaaaaaaapm".into(),
                    "aaaaaaaapn".into(),
                    "aaaaaaaapo".into(),
                    "aaaaaaaapp".into(),
                    "aaaaaaaapq".into(),
                    "aaaaaaaapr".into(),
                    "aaaaaaaaps".into(),
                    "aaaaaaaapt".into(),
                    "aaaaaaaapu".into(),
                    "aaaaaaaapv".into(),
                    "aaaaaaaapw".into(),
                    "aaaaaaaapx".into(),
                    "aaaaaaaapy".into(),
                    "aaaaaaaapz".into(),
                    "aaaaaaaaqa".into(),
                    "aaaaaaaaqb".into(),
                    "aaaaaaaaqc".into(),
                    "aaaaaaaaqd".into(),
                    "aaaaaaaaqe".into(),
                    "aaaaaaaaqf".into(),
                    "aaaaaaaaqg".into(),
                    "aaaaaaaaqh".into(),
                    "aaaaaaaaqi".into(),
                    "aaaaaaaaqj".into(),
                    "aaaaaaaaqk".into(),
                    "aaaaaaaaql".into(),
                    "aaaaaaaaqm".into(),
                    "aaaaaaaaqn".into(),
                    "aaaaaaaaqo".into(),
                    "aaaaaaaaqp".into(),
                    "aaaaaaaaqq".into(),
                    "aaaaaaaaqr".into(),
                    "aaaaaaaaqs".into(),
                    "aaaaaaaaqt".into(),
                    "aaaaaaaaqu".into(),
                    "aaaaaaaaqv".into(),
                    "aaaaaaaaqw".into(),
                    "aaaaaaaaqx".into(),
                    "aaaaaaaaqy".into(),
                    "aaaaaaaaqz".into(),
                    "aaaaaaaara".into(),
                    "aaaaaaaarb".into(),
                    "aaaaaaaarc".into(),
                    "aaaaaaaard".into(),
                    "aaaaaaaare".into(),
                    "aaaaaaaarf".into(),
                    "aaaaaaaarg".into(),
                    "aaaaaaaarh".into(),
                    "aaaaaaaari".into(),
                    "aaaaaaaarj".into(),
                    "aaaaaaaark".into(),
                    "aaaaaaaarl".into(),
                    "aaaaaaaarm".into(),
                    "aaaaaaaarn".into(),
                    "aaaaaaaaro".into(),
                    "aaaaaaaarp".into(),
                    "aaaaaaaarq".into(),
                    "aaaaaaaarr".into(),
                    "aaaaaaaars".into(),
                    "aaaaaaaart".into(),
                    "aaaaaaaaru".into(),
                    "aaaaaaaarv".into(),
                    "aaaaaaaarw".into(),
                    "aaaaaaaarx".into(),
                    "aaaaaaaary".into(),
                    "aaaaaaaarz".into(),
                    "aaaaaaaasa".into(),
                    "aaaaaaaasb".into(),
                    "aaaaaaaasc".into(),
                    "aaaaaaaasd".into(),
                    "aaaaaaaase".into(),
                    "aaaaaaaasf".into(),
                    "aaaaaaaasg".into(),
                    "aaaaaaaash".into(),
                    "aaaaaaaasi".into(),
                    "aaaaaaaasj".into(),
                    "aaaaaaaask".into(),
                    "aaaaaaaasl".into(),
                    "aaaaaaaasm".into(),
                    "aaaaaaaasn".into(),
                    "aaaaaaaaso".into(),
                    "aaaaaaaasp".into(),
                    "aaaaaaaasq".into(),
                    "aaaaaaaasr".into(),
                    "aaaaaaaass".into(),
                    "aaaaaaaast".into(),
                    "aaaaaaaasu".into(),
                    "aaaaaaaasv".into(),
                    "aaaaaaaasw".into(),
                    "aaaaaaaasx".into(),
                    "aaaaaaaasy".into(),
                    "aaaaaaaasz".into(),
                    "aaaaaaaata".into(),
                    "aaaaaaaatb".into(),
                    "aaaaaaaatc".into(),
                    "aaaaaaaatd".into(),
                    "aaaaaaaate".into(),
                    "aaaaaaaatf".into(),
                    "aaaaaaaatg".into(),
                    "aaaaaaaath".into(),
                    "aaaaaaaati".into(),
                    "aaaaaaaatj".into(),
                    "aaaaaaaatk".into(),
                    "aaaaaaaatl".into(),
                    "aaaaaaaatm".into(),
                    "aaaaaaaatn".into(),
                    "aaaaaaaato".into(),
                    "aaaaaaaatp".into(),
                    "aaaaaaaatq".into(),
                    "aaaaaaaatr".into(),
                    "aaaaaaaats".into(),
                    "aaaaaaaatt".into(),
                    "aaaaaaaatu".into(),
                    "aaaaaaaatv".into(),
                    "aaaaaaaatw".into(),
                    "aaaaaaaatx".into(),
                    "aaaaaaaaty".into(),
                    "aaaaaaaatz".into(),
                    "aaaaaaaaua".into(),
                    "aaaaaaaaub".into(),
                    "aaaaaaaauc".into(),
                    "aaaaaaaaud".into(),
                    "aaaaaaaaue".into(),
                    "aaaaaaaauf".into(),
                    "aaaaaaaaug".into(),
                    "aaaaaaaauh".into(),
                    "aaaaaaaaui".into(),
                    "aaaaaaaauj".into(),
                    "aaaaaaaauk".into(),
                    "aaaaaaaaul".into(),
                    "aaaaaaaaum".into(),
                    "aaaaaaaaun".into(),
                    "aaaaaaaauo".into(),
                    "aaaaaaaaup".into(),
                    "aaaaaaaauq".into(),
                    "aaaaaaaaur".into(),
                    "aaaaaaaaus".into(),
                    "aaaaaaaaut".into(),
                    "aaaaaaaauu".into(),
                    "aaaaaaaauv".into(),
                    "aaaaaaaauw".into(),
                    "aaaaaaaaux".into(),
                    "aaaaaaaauy".into(),
                    "aaaaaaaauz".into(),
                    "aaaaaaaava".into(),
                    "aaaaaaaavb".into(),
                    "aaaaaaaavc".into(),
                    "aaaaaaaavd".into(),
                    "aaaaaaaave".into(),
                    "aaaaaaaavf".into(),
                    "aaaaaaaavg".into(),
                    "aaaaaaaavh".into(),
                    "aaaaaaaavi".into(),
                    "aaaaaaaavj".into(),
                    "aaaaaaaavk".into(),
                    "aaaaaaaavl".into(),
                    "aaaaaaaavm".into(),
                    "aaaaaaaavn".into(),
                    "aaaaaaaavo".into(),
                    "aaaaaaaavp".into(),
                    "aaaaaaaavq".into(),
                    "aaaaaaaavr".into(),
                    "aaaaaaaavs".into(),
                    "aaaaaaaavt".into(),
                    "aaaaaaaavu".into(),
                    "aaaaaaaavv".into(),
                    "aaaaaaaavw".into(),
                    "aaaaaaaavx".into(),
                    "aaaaaaaavy".into(),
                    "aaaaaaaavz".into(),
                    "aaaaaaaawa".into(),
                    "aaaaaaaawb".into(),
                    "aaaaaaaawc".into(),
                    "aaaaaaaawd".into(),
                    "aaaaaaaawe".into(),
                    "aaaaaaaawf".into(),
                    "aaaaaaaawg".into(),
                    "aaaaaaaawh".into(),
                    "aaaaaaaawi".into(),
                    "aaaaaaaawj".into(),
                    "aaaaaaaawk".into(),
                    "aaaaaaaawl".into(),
                    "aaaaaaaawm".into(),
                    "aaaaaaaawn".into(),
                    "aaaaaaaawo".into(),
                    "aaaaaaaawp".into(),
                    "aaaaaaaawq".into(),
                    "aaaaaaaawr".into(),
                    "aaaaaaaaws".into(),
                    "aaaaaaaawt".into(),
                    "aaaaaaaawu".into(),
                    "aaaaaaaawv".into(),
                    "aaaaaaaaww".into(),
                    "aaaaaaaawx".into(),
                    "aaaaaaaawy".into(),
                    "aaaaaaaawz".into(),
                    "aaaaaaaaxa".into(),
                    "aaaaaaaaxb".into(),
                    "aaaaaaaaxc".into(),
                    "aaaaaaaaxd".into(),
                    "aaaaaaaaxe".into(),
                    "aaaaaaaaxf".into(),
                    "aaaaaaaaxg".into(),
                    "aaaaaaaaxh".into(),
                    "aaaaaaaaxi".into(),
                    "aaaaaaaaxj".into(),
                    "aaaaaaaaxk".into(),
                    "aaaaaaaaxl".into(),
                    "aaaaaaaaxm".into(),
                    "aaaaaaaaxn".into(),
                    "aaaaaaaaxo".into(),
                    "aaaaaaaaxp".into(),
                    "aaaaaaaaxq".into(),
                    "aaaaaaaaxr".into(),
                    "aaaaaaaaxs".into(),
                    "aaaaaaaaxt".into(),
                    "aaaaaaaaxu".into(),
                    "aaaaaaaaxv".into(),
                    "aaaaaaaaxw".into(),
                    "aaaaaaaaxx".into(),
                    "aaaaaaaaxy".into(),
                    "aaaaaaaaxz".into(),
                    "aaaaaaaaya".into(),
                    "aaaaaaaayb".into(),
                    "aaaaaaaayc".into(),
                    "aaaaaaaayd".into(),
                    "aaaaaaaaye".into(),
                    "aaaaaaaayf".into(),
                    "aaaaaaaayg".into(),
                    "aaaaaaaayh".into(),
                    "aaaaaaaayi".into(),
                    "aaaaaaaayj".into(),
                    "aaaaaaaayk".into(),
                    "aaaaaaaayl".into(),
                    "aaaaaaaaym".into(),
                    "aaaaaaaayn".into(),
                    "aaaaaaaayo".into(),
                    "aaaaaaaayp".into(),
                    "aaaaaaaayq".into(),
                    "aaaaaaaayr".into(),
                    "aaaaaaaays".into(),
                    "aaaaaaaayt".into(),
                    "aaaaaaaayu".into(),
                    "aaaaaaaayv".into(),
                    "aaaaaaaayw".into(),
                    "aaaaaaaayx".into(),
                    "aaaaaaaayy".into(),
                    "aaaaaaaayz".into(),
                    "aaaaaaaaza".into(),
                    "aaaaaaaazb".into(),
                    "aaaaaaaazc".into(),
                    "aaaaaaaazd".into(),
                    "aaaaaaaaze".into(),
                    "aaaaaaaazf".into(),
                    "aaaaaaaazg".into(),
                    "aaaaaaaazh".into(),
                    "aaaaaaaazi".into(),
                    "aaaaaaaazj".into(),
                    "aaaaaaaazk".into(),
                    "aaaaaaaazl".into(),
                    "aaaaaaaazm".into(),
                    "aaaaaaaazn".into(),
                    "aaaaaaaazo".into(),
                    "aaaaaaaazp".into(),
                    "aaaaaaaazq".into(),
                    "aaaaaaaazr".into(),
                    "aaaaaaaazs".into(),
                    "aaaaaaaazt".into(),
                    "aaaaaaaazu".into(),
                    "aaaaaaaazv".into(),
                    "aaaaaaaazw".into(),
                    "aaaaaaaazx".into(),
                    "aaaaaaaazy".into(),
                    "aaaaaaaazz".into()
                ]
            ),
            vec![
                "aaaaaaaaaa",
                "aaaaaaaaab",
                "aaaaaaaaac",
                "aaaaaaaaad",
                "aaaaaaaaae",
                "aaaaaaaaaf",
                "aaaaaaaaag",
                "aaaaaaaaah",
                "aaaaaaaaai",
                "aaaaaaaaaj",
                "aaaaaaaaak",
                "aaaaaaaaal",
                "aaaaaaaaan",
                "aaaaaaaaao",
                "aaaaaaaaap",
                "aaaaaaaaaq",
                "aaaaaaaaar",
                "aaaaaaaaas",
                "aaaaaaaaat",
                "aaaaaaaaau",
                "aaaaaaaaav",
                "aaaaaaaaaw",
                "aaaaaaaaay",
                "aaaaaaaaaz",
                "aaaaaaaabc",
                "aaaaaaaabm",
                "aaaaaaaacb",
                "aaaaaaaacd",
                "aaaaaaaadc",
                "aaaaaaaade",
                "aaaaaaaaed",
                "aaaaaaaaef",
                "aaaaaaaafe",
                "aaaaaaaafg",
                "aaaaaaaagf",
                "aaaaaaaagh",
                "aaaaaaaahg",
                "aaaaaaaahi",
                "aaaaaaaaih",
                "aaaaaaaaij",
                "aaaaaaaaji",
                "aaaaaaaajk",
                "aaaaaaaakj",
                "aaaaaaaakl",
                "aaaaaaaalk",
                "aaaaaaaanm",
                "aaaaaaaano",
                "aaaaaaaaon",
                "aaaaaaaaop",
                "aaaaaaaapo",
                "aaaaaaaapq",
                "aaaaaaaaqp",
                "aaaaaaaaqr",
                "aaaaaaaarq",
                "aaaaaaaars",
                "aaaaaaaasr",
                "aaaaaaaast",
                "aaaaaaaats",
                "aaaaaaaatu",
                "aaaaaaaaut",
                "aaaaaaaauv",
                "aaaaaaaavu",
                "aaaaaaaavw",
                "aaaaaaaawv",
                "aaaaaaaawx",
                "aaaaaaaayx",
                "aaaaaaaayz",
                "aaaaaaaaza",
                "aaaaaaaazy"
            ]
        );
    }
}
